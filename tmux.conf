# make italics work
set -ga terminal-overrides ',*:Tc'
set -g default-terminal "tmux"

# With seil Caps Lock is assigned to Ctrl
unbind-key C-b
set -g prefix C-a

# Reduce the delay when sending commands
set -sg escape-time 1

# Make windows and panes start at number 1 instead of number 0
set -g base-index 1
set -g pane-base-index 1

# renumber windows as they are created and destroyed
set -g renumber-windows on

# Allow to use the mouse
setw -g mouse on

# soften status bar color
set -g status-bg '#555555'
set -g status-fg '#999999'

# remove admiministative debris in status bar
set -g status-right ''

# Use vim keybindings in copy mode
# See: https://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Shortcuts
# Pressing binding twice sends it out of tmux
bind C-a send-prefix
# Reloads the conf file after changes
bind r source-file ~/.tmux.conf \; display "Reloaded!"

bind \ split-window -h
bind - split-window -v

# Smart pane switching with awareness of vim splits
# as seen on https://robots.thoughtbot.com/seamlessly-navigate-vim-and-tmux-splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind-key C-l last-window

# Fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# Coarse adjustment (5 or 10 cursor cells per bump)
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# keep the focus on current window and send the pane
# to a secondary window
bind-key b break-pane -d
